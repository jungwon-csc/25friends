/* 기본 스타일 및 글래스모피즘을 위한 배경 설정 */
body {
    font-family: 'Pretendard', sans-serif; /* 가독성 좋은 폰트로 변경 (웹폰트가 로드되지 않으면 기본 sans-serif로 표시됨) */
    margin: 0;
    padding: 20px;
    color: #333;
    /* 파스텔톤 그라데이션 배경 */
    background: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);
    display: flex;
    justify-content: center;
    align-items: center; /* 콘텐츠를 세로 중앙으로 */
    min-height: 100vh;
}

/* 메인 컨테이너 */
.container {
    display: flex;
    gap: 25px;
    width: 100%;
    max-width: 1000px;
    background: none; /* 기존 흰색 배경 제거 */
    padding: 0;       /* 패딩 제거 */
    box-shadow: none; /* 기존 그림자 제거 */
}

/* 글래스모피즘 패널 기본 스타일 (이름 목록, 사진 뷰어) */
.name-list, .photo-viewer {
    flex-basis: 50%;
    padding: 25px;
    border-radius: 15px; /* 부드러운 곡률 */
    
    /* 글래스모피즘 핵심 스타일 */
    background: rgba(255, 255, 255, 0.4); /* 반투명 흰색 배경 */
    backdrop-filter: blur(10px); /* 배경 블러 처리 */
    -webkit-backdrop-filter: blur(10px); /* Safari 호환성 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* 은은한 테두리 */
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15); /* 입체감을 위한 그림자 */
}

/* 제목 스타일 */
.name-list h2, .photo-viewer h2 {
    margin-top: 0;
    margin-bottom: 20px;
    color: #2c3e50; /* 부드러운 다크블루 텍스트 색상 */
    text-align: center;
    font-weight: 600;
}

/* 이름 목록 리스트 */
#friendsList {
    list-style: none;
    padding: 0;
    margin: 0;
    max-height: 450px; /* 목록이 길어질 경우 스크롤 */
    overflow-y: auto;
}

/* 이름 목록 아이템 */
#friendsList li {
    padding: 12px;
    margin-bottom: 8px;
    background-color: rgba(255, 255, 255, 0.5); /* 반투명한 아이템 배경 */
    border-radius: 8px;
    cursor: pointer;
    text-align: center;
    color: #34495e;
    font-weight: 500;
    transition: all 0.2s ease-in-out;
}

#friendsList li:hover {
    background-color: rgba(255, 255, 255, 0.9); /* 호버 시 더 밝게 */
    transform: scale(1.03); /* 살짝 커지는 효과 */
    color: #007bff;
}

/* 사진이 표시되는 영역 */
#imageContainer {
    width: 100%;
    min-height: 350px; /* 높이 살짝 조정 */
    border-radius: 10px;
    border: none; /* 대시 라인 제거 */
    background: rgba(255, 255, 255, 0.3); /* 이미지 뒤에 부드러운 배경 */
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 20px;
    overflow: hidden;
    position: relative; /* 댄스 GIF 위치 기준 */
}

#displayedImage {
    max-width: 100%;
    max-height: 350px;
    display: block;
    margin: auto;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1); /* 이미지에 그림자 추가 */
    transform: rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1));
    filter: var(--current-bw-filter, none);
    transition: all 0.3s ease;
}

/* 컨트롤 버튼 영역 */
#controls {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 8px;
    margin-top: 10px;
}

#controls hr {
    display: none; /* 구분선 제거 */
}

/* 컨트롤 버튼 스타일 */
#controls button {
    padding: 10px 15px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    color: #fff;
    font-weight: 500;
    transition: all 0.2s ease;
    background: linear-gradient(45deg, #007bff, #00c6ff); /* 세련된 그라데이션 버튼 */
    box-shadow: 0 2px 5px rgba(0, 123, 255, 0.3);
}

#controls button:hover {
    transform: translateY(-2px); /* 호버 시 살짝 위로 이동 */
    box-shadow: 0 4px 10px rgba(0, 123, 255, 0.4);
}

/* 특별 버튼 (BANANA, HAPPY CAT) 스타일 */
#controls button:nth-child(1), 
#controls button:nth-child(2) {
    background: linear-gradient(45deg, #ffc107, #ffeb3b); /* 노란색 계열 */
    color: #333;
    box-shadow: 0 2px 5px rgba(255, 193, 7, 0.4);
}

#controls button:nth-child(1):hover, 
#controls button:nth-child(2):hover {
    box-shadow: 0 4px 10px rgba(255, 193, 7, 0.5);
}

/* RESET 버튼 스타일 */
#controls button:nth-child(3) {
    background: linear-gradient(45deg, #6c757d, #adb5bd); /* 회색 계열 */
    box-shadow: 0 2px 5px rgba(108, 117, 125, 0.3);
}
#controls button:nth-child(3):hover {
     box-shadow: 0 4px 10px rgba(108, 117, 125, 0.4);
}


/* --- 애니메이션 정의 (기존과 동일, CSS 변수 사용 유지) --- */
@keyframes shake {
    0%, 100% { transform: translateX(0) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); }
    20%, 40%, 60%, 80% { transform: translateX(5px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); }
}
.shake-animation {
    animation: shake 0.5s ease-in-out;
}

@keyframes spin {
    from { transform: rotate(0deg) scale(var(--current-scale, 1)); }
    to { transform: rotate(360deg) scale(var(--current-scale, 1)); }
}
.spinning {
    animation: spin 2s linear infinite;
}

@keyframes continuous-pulse {
    0% { transform: scale(var(--current-scale-pulse-start, 1)) rotate(var(--current-rotation-pulse, 0deg)); }
    50% { transform: scale(calc(var(--current-scale-pulse-start, 1) * 1.1)) rotate(var(--current-rotation-pulse, 0deg)); }
    100% { transform: scale(var(--current-scale-pulse-start, 1)) rotate(var(--current-rotation-pulse, 0deg)); }
}
.pulsing {
    animation: continuous-pulse 1s ease-in-out infinite;
}

@keyframes blink-effect {
    50% { opacity: 0.5; }
}
.blinking {
    animation: blink-effect 0.7s linear infinite;
}

@keyframes glitch-effect {
    0%, 100% { clip-path: inset(0); opacity: 1; }
    10% { clip-path: inset(5px 0 85px 0); transform: translateX(-3px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 0.8; }
    20% { clip-path: inset(70px 0 10px 0); transform: translateX(3px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 1; }
    30% { clip-path: inset(85px 0 5px 0); transform: translateX(-3px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 0.7;}
    40% { clip-path: inset(10px 0 70px 0); transform: translateX(3px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 1;}
    50% { clip-path: inset(30px 0 60px 0); transform: translateX(-4px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 0.6;}
    60% { clip-path: inset(60px 0 30px 0); transform: translateX(4px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 1;}
    70% { clip-path: inset(20px 0 75px 0); transform: translateX(-2px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 0.8;}
    80% { clip-path: inset(75px 0 20px 0); transform: translateX(2px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 1;}
    90% { clip-path: inset(45px 0 45px 0); transform: translateX(-3px) rotate(var(--current-rotation, 0deg)) scale(var(--current-scale, 1)); opacity: 0.7;}
}
.glitching {
    animation: glitch-effect 0.3s steps(2, jump-none) 3;
}

/* 댄스 GIF 오버레이 스타일 */
.dance-gif-overlay {
    position: absolute;
    z-index: 10;
    pointer-events: none;
}
